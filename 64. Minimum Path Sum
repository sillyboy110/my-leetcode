class Solution 
{
public:
    vector<vector<int>>vt;
    int minPathSum(vector<vector<int>>& grid) 
    {
        int m=grid.size();
        if(m ==0)
            return 0;
        int n= grid[0].size();
        vector<int>temp(n,0);
        for(int i =0;i<=m-1;++i)
        {
            for(int j = 0;j<=n-1;++j)
            {
                if((j==0)&&(i==0))
                {
                    temp[0] =grid[i][j];
                }
                else if(j==0)
                {
                    temp[0]=vt[i-1][0]+grid[i][j];
                }
                else if(i ==0)
                {
                    temp[j]=temp[j-1]+grid[i][j];
                }
                else
                {
                    temp[j] =( temp[j-1]<vt[i-1][j]?temp[j-1]:vt[i-1][j])+grid[i][j];
                }
            }
            vt.push_back(temp);
            
        }
        return vt[m-1][n-1];
    }
    
};

//f(m,n)=min(f(m-1,n),f(m,n-1))+val[m][n];

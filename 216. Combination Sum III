class Solution 
{
public:
    vector<vector<int>>result;
    vector<int>vt;
    
    vector<vector<int>> combinationSum3(int k, int n) 
    {
        vector<int>temp(k,0);
        vt=temp;
        get_result(1,0,0,k,n);
        return result;
    }
    void get_result(int now,int pre,int sum,int k,int n)
    {
		int i = pre+1;
		while((i+1+i+k-now)*(k-now)/2<=n-sum-i)
		{
			if((i<=9)&&((k-now)*9>=n-sum-i) ||((k-now)==1 &&(n-sum-i)==9))
			{
				vt[now-1]=i;
				if(now ==k)
				 {
					result.push_back(vt);
					return;
				 }
				get_result(now+1,i,sum+i,k,n);
			}
			++i;
		}
    }
};
